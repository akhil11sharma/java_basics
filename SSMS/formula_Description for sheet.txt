import openpyxl
import pyodbc
import os
import re

def extract_formulas(file_path):
    workbook = openpyxl.load_workbook(file_path, data_only=False)
    sheet = workbook.active

    formulas = []
    headers = [cell.value for cell in next(sheet.iter_rows())]  

    for row_index, row in enumerate(sheet.iter_rows(min_row=2)): 
        for col_index, cell in enumerate(row):
            if cell.data_type == 'f':
                formula_info = {
                    'Formula': cell.value,
                    'Header': headers[col_index], 
                    'CellName': cell.coordinate,
                    'InvolvedColumns': replace_with_headers(cell.value, headers)  
                }
                formulas.append(formula_info)

    workbook.close()

    return formulas

def replace_with_headers(formula, headers):
    column_references = re.findall(r'([A-Za-z]+)(\d+)', formula)
    replaced_formula = formula

    for col_ref, row_num in column_references:
        column_name = col_ref.upper()  
        col_index = openpyxl.utils.cell.column_index_from_string(column_name) - 1

        if col_index < len(headers) and headers[col_index]:
            header_name = headers[col_index]
            replaced_formula = replaced_formula.replace(f"{col_ref}{row_num}", header_name)

    return replaced_formula

def main(file_path, database_name, db_config):
    file_name = os.path.splitext(os.path.basename(file_path))[0]
    formulas = extract_formulas(file_path)

    if formulas:
        print("List of formulas used in the Excel sheet:")
        for formula_info in formulas:
            print(f"Formula used in {formula_info['Header']} ({formula_info['CellName']}) -> {formula_info['Formula']}")
            print(f"Involved columns (with headers): {formula_info['InvolvedColumns']}")

        store_in_database(formulas, file_name, db_config)
        print(f"File '{file_path}' successfully processed and data stored in '{database_name}.{file_name}'")
    else:
        print("No formulas found in the Excel sheet.")

def store_in_database(formulas, file_name, db_config):
    conn_str = f"DRIVER={{SQL Server}};SERVER={db_config['server']};DATABASE={db_config['database']};trusted_connection={db_config['trusted_connection']}"
    conn = pyodbc.connect(conn_str)
    cursor = conn.cursor()

    table_name = f"{file_name}_Formulas"
    create_table_if_not_exists(cursor, table_name)

    for formula_info in formulas:
        formula = formula_info['Formula']
        header = formula_info['Header']
        cell_name = formula_info['CellName']
        involved_columns = formula_info['InvolvedColumns']

        cursor.execute(f"INSERT INTO {table_name} (Formula, Column_Header, CellName, Involved_Columns) VALUES (?, ?, ?, ?)",
                       formula, header, cell_name, involved_columns)

    conn.commit()
    conn.close()

def create_table_if_not_exists(cursor, table_name):
    cursor.execute(f'''
        IF NOT EXISTS (SELECT * FROM sys.tables WHERE name='{table_name}')
        BEGIN
            CREATE TABLE {table_name} (
                Formula NVARCHAR(MAX),
                Column_Header NVARCHAR(255),
                CellName NVARCHAR(255),
                Involved_Columns NVARCHAR(MAX)
            );
            PRINT 'Table created successfully: {table_name}';
        END
    ''')

if __name__ == "__main__":
    excel_file = r'C:\Users\Nikhil Sharma\Desktop\SSMS\areaCalculationSheet.xlsx'
    database_name = 'test'
    db_config = {
        'server': 'DESKTOP-PLHJ2M7',
        'database': 'test',
        'trusted_connection': 'yes'
    }
    main(excel_file, database_name, db_config)
